@model Appointment
@{
    ViewData["Title"] = "Randevular";
    ViewData["Description"] = "Randevuları Düzenle";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <h3>
                    <button class="btn btn-app" data-toggle="modal" data-target="#modal-create">
                        <span class="badge bg-green">Yeni ekle</span>
                        <i class="fa fa-plus"></i>
                    </button>
                    <!--sadece saat değiştirilebiliyor, çok saçma-->
                    <!--<button class="btn btn-app" data-toggle="modal" data-target="#modal-edit">
                        <span class="badge bg-yellow">Düzenle</span>
                        <i class="fa fa-edit"></i>
                    </button>-->
                    <button class="btn btn-app" data-toggle="modal" data-target="#modal-delete">
                        <span class="badge bg-red">Sil</span>
                        <i class="fa fa-trash"></i>
                    </button>
                </h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <table class="table" id="table" style="overflow-y:auto; max-height:100vh;">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th>Doktor</th>
                            <th>Hasta</th>
                            <th>Hastane</th>
                            <th>Muayene Yeri</th>
                            <th>Tarih</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modal-create">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Randevu Ekle</h4>
                </div>
                <div class="modal-body">
                    <form onsubmit="return false;" id="createForm">
                        <div class="form-group">
                            <select class="form-control select2" style="width: 100%;" id="doctorId">
                                <option disabled selected>Doktor seçiniz...</option>
                                @foreach (var item in hospitalManager.GetDoctors())
                                {
                                    <option value="@item.Id">@item.UserInfo.Name @item.UserInfo.Surname</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <select class="form-control select2" style="width: 100%;" id="patientId">
                                <option disabled selected>Hasta seçiniz...</option>
                                @foreach (var item in hospitalManager.GetPatients())
                                {
                                    <option value="@item.Id">@item.UserInfo.Name @item.UserInfo.Surname</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <input id="dtpickerCreate" class="datetimepicker" type="text" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="createButton" type="button" class="btn btn-primary pull-left" onclick="createAppointment()">Oluştur</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">İptal</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <div class="modal fade" id="modal-edit">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Randevu Düzenle</h4>
                </div>
                <div class="modal-body">
                    <form onsubmit="return false;" id="editForm">
                        @*<div class="form-group">
                                <input class="form-control" asp-for="UserInfo.Name" placeholder="Adı" />
                                <span asp-validation-for="UserInfo.Name" class="text-red"></span>
                            </div>*@
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="editButton" class="btn btn-primary pull-left">Güncelle</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">İptal</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
    <div class="modal fade" id="modal-delete">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Randevu Sil</h4>
                </div>
                <div class="modal-body">
                    Seçili veriler silinecek, devam etmek istiyor musunuz?
                </div>
                <div class="modal-footer">
                    <button type="button" id="deleteButton" class="btn btn-danger pull-left">Sil</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">İptal</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>

@section Scripts{
    <script>

        var dt = $('#table').DataTable({
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Turkish.json"
            },
            serverSide: false,
            orderMulti: false,
            "lengthMenu": [[30, 100, 250, -1], [30, 100, 250, "All"]],

            ajax: {
                type: "get",
                url: "/api/GetAllAppointments",
                dataSrc: "",
                datatype: "json",
                // success: function(result) {
                //     console.log(JSON.stringify(result));
                // }
            },
            "order": [2, "desc"],
            "select": {
                style: "os",
                selector: 'td:first-child'
            },
            "columnDefs":
                [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                },
                {
                    "targets": [1, 2],
                    "visible": false,
                    "searchable": false,
                    "orderable": false
                },
                {
                    targets: -1,
                    className: 'text-center'
                }],
            "columns": [
                { "data": null, render: function () { return "" } },
                { "data": "id" },
                { "data": "createdAt" },
                { "data": "doctor" },
                { "data": "patient" },
                { "data": "hospital" },
                { "data": "polyclinic" },
                { "data": "time", render: function (data) { return moment(data).format("DD-MM-YYYY"); } },

            ],
        });

        $('.datetimepicker').datetimepicker(
            {
                minDate: '+1970/01/02',//yesterday is minimum date(for today use 0 or -1970/01/01)
                defaultDate: '+1970/01/02',//yesterday is minimum date(for today use 0 or -1970/01/01)
                lang: 'tr',
                inline: true,
                allowTimes: ["06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00"],
                onGenerate: function (ct) {
                    $(this).find('.xdsoft_date.xdsoft_weekend')
                        .addClass('xdsoft_disabled');
                },
                defaultTime: '12:00',
                dayOfWeekStart: 1,
            }
        );

        $('.select2').select2();
        $('#doctorId').on('change', function () {
            var dom_id = $(this).closest("form").find('.datetimepicker').attr('id');
            GetAppointments(this.value, "#" + dom_id);
        });

        function GetAppointments(id, picker_id) {
            $.ajax({
                url: "/api/GetAppointment/" + id,
                type: "get",
                success: function (data) {
                    var dates = {};
                    console.log(picker_id)
                    console.log(data)
                    var date = moment(data.time).format(moment.HTML5_FMT.DATE);
                    var times = parseInt(moment(data.time).hours());
                    $(picker_id).datetimepicker('setOptions', {
                        onGenerate: function (ct) {
                            $(this).find('.xdsoft_date.xdsoft_weekend')
                                .addClass('xdsoft_disabled');

                            $('.xdsoft_time_variant .xdsoft_time').show();
                            if (ind !== -1) {
                                $('.xdsoft_time_variant .xdsoft_time').each(function (index) {
                                    if (times.indexOf(parseInt($(this).text())) !== -1) {
                                        console.log(dates[ind])
                                        $(this).addClass("xdsoft_disabled")
                                    }
                                });
                            }
                        },
                    });
                },
                error: function (err, status) {
                    console.log(err.responseText)
                    if (status == 404) {
                        toastr.error("Aradığınız öğe bulunamadı.");
                        return;
                    }
                    toastr.error(err.responseText);
                },
            });
        }

        function loadFromId(id) {
            $.ajax({
                url: "/api/GetAppointment/" + id,
                type: "get",
                success: function (data) {
                    var dates = {};
                    console.log(picker_id)
                    console.log(data)
                    $.each(data, function (_, val) {
                        var date = moment(val.time).format(moment.HTML5_FMT.DATE);
                        var time = parseInt(moment(val.time).hours());
                        if (dates[date] == null) {
                            dates[date] = [];
                        }
                        dates[date].push(time);
                    });
                    $('#dtpickerEdit').datetimepicker('setOptions', {
                        onGenerate: function (ct) {
                            var ind = moment(ct).format(moment.HTML5_FMT.DATE);

                            $('.xdsoft_time_variant .xdsoft_time').show();
                            if (ind !== -1) {
                                $('.xdsoft_time_variant .xdsoft_time').each(function (index) {
                                    if (dates[ind] != null) {
                                        if (dates[ind].indexOf(parseInt($(this).text())) !== -1) {
                                            console.log(dates[ind])
                                            $(this).addClass("xdsoft_disabled")
                                        }
                                    }
                                });
                            }
                        },
                    });
                },
                error: function (err, status) {
                    console.log(err.responseText)
                    if (status == 404) {
                        toastr.error("Aradığınız öğe bulunamadı.");
                        return;
                    }
                    toastr.error(err.responseText);
                },
            });
        }

        $('#modal-edit').on('show.bs.modal', function (e) {
            var rows = dt.rows('.selected').data();
            if (rows.length > 1) {
                toastr.error("Birden fazla veriyi düzenleyemezsiniz.");
                e.preventDefault();
                return;
            } else if (rows.length == 0) {
                toastr.error("Düzenleme yapmak istediğiniz veriyi seçiniz.");
                e.preventDefault();
                return;
            }
            loadFromId(rows[0].id);
        });

        function loader(element, state) {
            if (state == true) {
                $(element).html('Lütfen bekleyin <i class="fa fa-spinner fa-spin"></i>');
                $(element).addClass("disabled");
            } else {
                $(element).html(state);
                $(element).removeClass("disabled");
            }
        }



        function createAppointment() {
            loader('#createButton', true)
            var d = $('#dtpickerCreate').datetimepicker('getValue');
            var doctorId = $('#doctorId').find(":selected").val();
            var patientId = $('#patientId').find(":selected").val();
            console.log(d)
            $.ajax({
                url: "/api/CreateAppointment/" + doctorId + "/" + patientId,
                type: "post",
                contentType: "application/json",
                data: JSON.stringify({ time: moment(d).format("YYYY-MM-DD[T]HH:mm") }),
                success: function (data) {
                    console.log(moment(data));
                    dt.ajax.reload();
                    toastr.success("Randevu başarıyla oluşturuldu.");
                },
                error: function (err, status) {
                    console.log(err.responseText)
                    if (status == 404) {
                        toastr.error("Aradığınız öğe bulunamadı.");
                        return;
                    }
                    toastr.error(err.responseText);
                },
                complete: function () { loader('#createButton', "Oluştur"); }
            });
        }

        function updateAppointment(id) {
            loader('#editButton', true);
            var formData = $("#editForm").serialize();
            console.log(formData);
            $.ajax({
                url: "/api/UpdateAppointment/" + id,
                type: "put",
                data: formData,
                success: function () { dt.ajax.reload(); toastr.success("Randevu kaydı başarıyla güncellendi.") },
                complete: function () {
                    $("#modal-edit").modal("hide");
                    loader('#editButton', "Güncelle");
                },
                error: function (err, status) {
                    console.log(err.responseText)
                    if (status == 404) {
                        toastr.error("Aradığınız öğe bulunamadı.");
                        return;
                    }
                    toastr.error(err.responseText);
                }
            });
        }

        $('#modal-delete').on('show.bs.modal', function (e) {
            var rows = dt.rows('.selected').data();
            if (rows.length == 0) {
                toastr.error("Silme işlemi için en az 1 veriyi seçmelisiniz.");
                e.preventDefault();
                return;
            }
            var data = []
            $.each(rows, function (key, value) {
                data.push({ id: value.id });
            });
            console.log(JSON.stringify(data))
            $('#deleteButton').on('click', function () {
                loader('#deleteButton', true);
                $.ajax({
                    url: "/api/DeleteAppointment",
                    type: "delete",
                    contentType: "application/json",
                    data: JSON.stringify({ Appointments: data }),
                    success: function () { dt.ajax.reload(); toastr.warning("Seçili veriler silindi.") },
                    complete: function () {
                        $("#modal-delete").modal("hide");
                        loader('#createButton', "Sil");
                    },
                    error: function (err, status) {
                        console.log(err.responseText)
                        if (status == 404) {
                            toastr.error("Aradığınız öğe bulunamadı.");
                            return;
                        }
                        toastr.error(err.responseText);
                    }
                });
            });
        });

    </script>



    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}