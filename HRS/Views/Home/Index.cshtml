@model FilterVM

@{
    var role = sessionManager.GetRole();
    var user = sessionManager.GetUser();
    var userinfo = userManager.GetUserInfo(user);
    var cities = ViewBag.Cities as IEnumerable<City>;
    var clinics = ViewBag.Clinics as IEnumerable<Clinic>;
    var hospitals = ViewBag.Hospitals as IEnumerable<Hospital>;
    var j = Model;
}

<div class="user-filtre">
    <div class="container" data-aos="fade-left"
         data-aos-anchor="#example-anchor"
         data-aos-offset="500"
         data-aos-duration="500">
        <a asp-action="SignOut" class="sign-out hvr-box-shadow-inset"><i class="fa fa-sign-out" aria-hidden="true"></i> ÇIKIŞ</a>
        <a asp-action="Appointments" class="profil hvr-box-shadow-inset">
            <i class="fa fa-user-circle-o" aria-hidden="true"></i>
            Sn. @userinfo.Name @userinfo.Surname
        </a>

    </div>
</div>
<div class="row pull-right">
    <div id="dateLoading" class="text-center">
        <img src="~/images/loading1.svg" alt="Loading ...">
    </div>
    <div id="dateArea" class="">
        <form>
            <div class="form-group">
                <input id="datetimepicker" type="text" />
            </div>
            <div class="form-group">
                <button id="pickAppointment" type="button" class="form-control  btn-outline-primary">Randevu Oluştur</button>
            </div>
        </form>
    </div>
</div>
<div class="container">
    <div class="dropdown" data-aos="fade-up"
         data-aos-duration="3000">

        <h5>HASTANE RANDEVU ARAMA</h5>
        <form method="post" asp-action="Index">
            <div class="input-group mb-3 il">
                <select class="custom-select" id="citySelect" asp-for="CityId">
                    <option selected>İl</option>
                    @foreach (var item in cities)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <div class="input-group mb-3 il">
                <select class="custom-select" id="townSelect" asp-for="TownId">
                    <option selected>İlçe</option>
                </select>
            </div>
            <div class="input-group mb-3 il">
                <select class="custom-select" id="clinicSelect" asp-for="ClinicId">
                    <option selected>Klinik</option>
                    @foreach (var item in clinics)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <div class="input-group mb-3 il">
                <select class="custom-select" id="hospitalSelect" asp-for="HospitalId">
                    <option selected>Hastane</option>
                    @foreach (var item in hospitals)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <div class="buttons">
                <button type="button" class="reset-but hvr-round-corners" onclick="window.location = '@Url.Action("Index")'">TEMİZLE</button>
                <button type="submit" class="search hvr-round-corners">RANDEVU ARA</button>
            </div>
        </form>
        @if (ViewBag.Result != null && ViewBag.Result.Count > 0)
        {
            @if (ViewBag.Success != null)
            {
                <h2 class="text-center">@ViewBag.Success</h2>
            }
            <div class="data">

                <table class="table col-md-12" id="table">
                    <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">Hekim</th>
                            <th scope="col">Kurum Adı</th>
                            <th scope="col">Muayene Yeri</th>
                            <th scope="col">Tarih</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in ViewBag.Result as IEnumerable<User>)
                        {
                            <tr class="@(item.UserInfo.Gender == "Erkek" ? "Male" : "Female" )">
                                <th class="icon col-md-offset">
                                    <i class="fa fa-user-md" aria-hidden="true"></i>
                                </th>
                                <td class="doctor">
                                    <span>@item.UserInfo.Name @item.UserInfo.Surname</span>
                                </td>
                                <td class="hospital">
                                    @item.UserInfo.Hospital.Name
                                </td>
                                <td class="place">
                                    @if (hospitalManager.GetPolyclinic(item.UserInfo.Hospital, item.UserInfo.Clinic) != null)
                                    {
                                        @hospitalManager.GetPolyclinic(item.UserInfo.Hospital, item.UserInfo.Clinic).Name
                                    }
                                    else
                                    {
                                        @item.UserInfo.Clinic.Name
                                    }
                                </td>
                                <td class="tarih">
                                    @if (appointmentManager.GetDoctorLatestAppointment(item) == null)
                                    {
                                        <span>En Erken @DateTime.Now.Add(TimeSpan.FromDays(1)).ToShortDateString()</span> <!--eğer bir randevusu yoksa en erken tarih olarak yarını seç-->
                                    }
                                    else
                                    {
                                        <span>En Erken @appointmentManager.GetDoctorLatestAppointment(item).Time.ToShortDateString()</span>
                                    }
                                </td>

                                <td class="icon-arrow">
                                    <a href="#" onclick="GetAppointments('@item.Id')">
                                        <i class="fa fa-angle-double-right" aria-hidden="true"></i>
                                    </a>
                                </td>

                            </tr>
                        }

                    <tbody>
                </table>

            </div>
        }
        else
        {
            <div class="container-fluid">
                <div class="alert alert-danger" role="alert">
                    Gösterilecek hiçbir veri yok.
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="modal-info">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="alert alert-success" role="alert">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary pull-left" data-dismiss="modal">Tamam</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@section Styles {
    <link href="~/css/jquery.datetimepicker.min.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/js/jquery.datetimepicker.full.min.js"></script>
    <script>
        $(document).ready(function () {
            let dep = [
                { dependee: '#citySelect', dependant: '#townSelect', url: "/api/GetTowns", firstdependee: "İl", firstdependant: "İlçe" },
                { dependee: '#citySelect', dependant: '#hospitalSelect', url: "/api/GetHospitalByCity", fallbackurl: "/api/GetHospitals", firstdependee: "İl", firstdependant: "Hastane" },
                { dependee: '#townSelect', dependant: '#hospitalSelect', url: "/api/GetHospitalByTown", fallbackurl: "/api/GetHospitals", firstdependee: "İlçe", firstdependant: "Hastane" },
            ];

            $.each(dep, function () {
                regDependentSelect(this.dependee, this.dependant, this.url, this.firstdependee, this.firstdependant);
            });

            $('#clinicSelect').on("change", function () {
                var selectedVal = $('#hospitalSelect').find(":selected").val();
                $.ajax({
                    url: "/api/GetClinic/" + this.value,
                    success: function (data) {

                        $('#hospitalSelect').html("<option>Hastane</option>");
                        $.each(data.hospitals, function (_, val) {
                            $("#hospitalSelect").append($("<option />").val(val.id).text(val.name));
                            if (selectedVal === val.id.toString()) {
                                $("#hospitalSelect option[value='" + val.id + "']").attr("selected", "selected");
                            }
                        });

                    },
                    error: function () {
                        $.ajax({
                            url: "/api/GetHospitals",
                            success: function (data) {
                                $('#hospitalSelect').html("<option>Hastane</option>")
                                $.each(data, function (_, val) {
                                    $("#hospitalSelect").append($("<option />").val(val.id).text(val.name));
                                });
                            }
                        })
                    }
                });

            });

            $('#hospitalSelect').on("change", function () {
                var selectedVal = $('#clinicSelect').find(":selected").val();
                $.ajax({
                    url: "/api/GetHospital/" + this.value,
                    success: function (data) {

                        $('#clinicSelect').html("<option>Klinik</option>")
                        $.each(data.clinics, function (_, val) {
                            $("#clinicSelect").append($("<option />").val(val.id).text(val.name));

                            if (selectedVal === val.id.toString()) {
                                $("#clinicSelect option[value='" + val.id + "']").attr("selected", "selected");
                                console.log(val.id + " " + selectedVal)
                            }
                        });

                    },
                    error: function () {

                        $.ajax({
                            url: "/api/GetClinics",
                            success: function (data) {
                                $('#clinicSelect').html("<option>Klinik</option>")
                                $.each(data, function (_, val) {
                                    $("#clinicSelect").append($("<option />").val(val.id).text(val.name));
                                });
                            }
                        })
                    }
                });

            });

            $('#datetimepicker').datetimepicker(
                {
                    minDate: '+1970/01/02',//yesterday is minimum date(for today use 0 or -1970/01/01)
                    defaultDate: '+1970/01/02',//yesterday is minimum date(for today use 0 or -1970/01/01)
                    lang: 'tr',
                    inline: true,
                    allowTimes: ["06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00"],
                    onGenerate:function( ct ){
                        $(this).find('.xdsoft_date.xdsoft_weekend')
                            .addClass('xdsoft_disabled');
                        console.log("generated")
                    },
                    defaultTime: '12:00',
                    dayOfWeekStart: 1,
                }
            );
            $('#dateArea').hide();

        });

        function setUpDTPicker(data){
             var dates = {};
            console.log(data)
            $.each(data, function (_, val) {
                var date = moment(val.time).format(moment.HTML5_FMT.DATE);
                var time = parseInt(moment(val.time).hours());
                //disabledDates.append(date);
                if (dates[date] == null) {
                    dates[date] = [];
                }
                dates[date].push(time);
            });
            $('#dateArea').show();
            $('#datetimepicker').datetimepicker('setOptions', {
                //defaultTime: "",//nearest appointment's time
                //disabledDates: disabledDates,
                onGenerate: function (ct) {
                        $(this).find('.xdsoft_date.xdsoft_weekend')
                        .addClass('xdsoft_disabled');
                        var ind = moment(ct).format(moment.HTML5_FMT.DATE);

                        $('.xdsoft_time_variant .xdsoft_time').show();
                        if(ind !== -1) {
                            $('.xdsoft_time_variant .xdsoft_time').each(function (index) {
                                if (dates[ind] != null) {
                                    if (dates[ind].indexOf(parseInt($(this).text())) !== -1) {
                                        console.log(dates[ind])
                                        $(this).addClass("xdsoft_disabled")
                                    }
                                }
                            });
                        }

                },
            });
        }

        function GetAppointments(id) {
            var l = "@hosting.WebRootPath";
            $('#dateLoading').show();
            $.ajax({
                url: "/api/GetDoctorAppointments/"+id,
                type: "get",
                success: function (data) {
                    setUpDTPicker(data);
                    $('#pickAppointment').off('click');
                    $('#pickAppointment').on("click", function () {
                        var d = $('#datetimepicker').datetimepicker('getValue');
                        console.log(d)
                        $.ajax({
                            url: "/api/CreateAppointment/"+id,
                            type: "post",
                            contentType: "application/json",
                            data: JSON.stringify({ time: moment(d).format("YYYY-MM-DD[T]HH:mm") }),
                            success: function (a_data) {
                                toastr.success("Randevu talebiniz başarıyla alınmıştır.");
                                $.ajax({
                                    url: "/api/GetDoctorAppointments/" + id,
                                    type: "get",
                                    success: function (ad_data) {
                                        setUpDTPicker(ad_data);
                                        console.log(a_data)
                                        $('#modal-info').find('.modal-body .alert').html(''+
                                            '<h4 class="alert-heading">Randevu talebi başarıyla alındı.</h4>'+
                                            '<p><b>Doktor:</b> '+a_data.doctor.userInfo.name + ' ' + a_data.doctor.userInfo.surname+'</p>'+
                                            '<hr>'+
                                            '<p class="mb-0"><b>Tarih:</b> ' + moment(a_data.time).format('DD/MM/YYYY HH:mm') + '</p>'+
                                            '<a href = "/Home/Appointments">Detayları görmek için lütfen tıklayın...</a>'
                                            );
                                        $('#modal-info').modal('show');
                                    }
                                });
                            },
                            error: function (err, status) {
                                console.log(err.responseText)
                                if (status == 404) {
                                    toastr.error("Aradığınız öğe bulunamadı.");
                                    return;
                                }
                                toastr.error(err.responseText);
                            }
                        })
                    });
                },
                 error: function (err, status) {
                    console.log(err.responseText)
                    if (status == 404) {
                        toastr.error("Aradığınız öğe bulunamadı.");
                        return;
                    }
                    toastr.error(err.responseText);
                },
                complete: function () {
                    $('#dateLoading').hide();
                }
            });
        }
        $('#dateLoading').hide();
    //$('#table').DataTable({
    //});
    </script>
}